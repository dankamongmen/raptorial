RAPTORIAL|                      by Nick Black <nick.black@sprezzatech.com>
---------'

  Raptorial \Rap*to"ri*al\ (r[a^]p*t[=o]"r[i^]*al), a. (Zool.)
     (a) Rapacious; living upon prey; -- said especially of
         certain birds.
     (b) Adapted for seizing prey; -- said of the legs, claws,
         etc., of insects, birds, and other animals.

 (from The Collaborative International Dictionary of English v.0.48 [gcide])

------------------.
What is Raptorial?|
------------------'

Raptorial is a backwards-compatible, drop-in replacement for a collection of
tools making up the "APT ecosystem." By unifying a number of tools in one code
base, it is hoped that performance, documentation, and testing will be
improved, and that a saner interface to APT actions will be presented to
developers. An emphasis will be put on making effective use of parallel
resources, whether they be disks or CPUs.

Components include, or will include:

 - libraptorial. A redesigned interface around APT facilitating rich,
                 high-performance client applications.

 - librapt. A drop-in, high-performance replacement for libapt, implemented
            as a wrapper around libraptorial.

 - rapt-get. A drop-in, high-performance replacement for apt-get, making use
            of libraptorial.

 - raptorial-file. An drop-in, high-performance replacement for apt-file,
            making use of libraptorial.

 - raptitude. An ncurses-based package manager, similar in spirit to (but not
              a drop-in replacement for) aptitude.

 - rapt-show-versions. A drop-in, high-performance replacement for
            apt-show-versions, making use of libraptorial.

It will also be possible to compile and link tools such as apt-get and aptitude
against librapt (and indeed this is regularly done to test compatibility). The
maximum performance, however, will be seen by using raptorial-native tools such
as rapt-get and rapt-file, since certain design choices in libapt do not allow
robust, safe, high-performance operation.

------------.
Requirements|
------------'

Libblossom (https://github.com/dankamongmen/libblossom)

----------------.
Similar projects|
----------------'

libept
 http://web.mornfall.net/libept.html
 Used by debtags, packagesearch, aptitude, synaptic, and goplay
 Uses libapt-pkg and libxapian

libapt-front
 http://libapt-front.alioth.debian.org/
 Superseded by libept

--------.
Building|
--------'

If you're using a git checkout, run 'autoreconf -fis'. There's no need to do
this for a release tarball. This will require the Autoconf tools.

Run ./configure && make && make install, seasoned to taste.

-------------------------------.
Differences from standard tools|
-------------------------------'

rapt-show-versions neither requires nor makes use of the apt-show-versions
cache. The -i/--initialize option is neither required nor supported.

rapt-show-versions does not support the -p/--package option, as this was never
necessary to use. Simply provide a package specification as an argument.

rapt-show-versions does not support the -r/--regex nor -R/--regex-all options.
Simply provide a regular expression to use it for search.

rapt-show-versions does not support the -v/--verbose option, as it does not
appear to work in apt-show-versions anyway.

These options might be added for backwards compatibility, but there are no
plans to do so currently.
